version: 2.0
jobs:
  test:
    docker:
      - image: skytt11/codechan
    steps:
      - checkout
      - run:
          name: test
          command: python tests.py
      - store_test_results:
          path: .
      - persist_to_workspace:
          root: .
          paths:
            - .
  package:
    machine: true
    steps:
      - attach_workspace:
            at: .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t $DOCKER_USER/codechan:$CIRCLE_SHA1 .
      - run: docker push $DOCKER_USER/codechan:$CIRCLE_SHA1 
      - store_artifacts:
          path: .
          destination: artifacts
      - persist_to_workspace:
          root: .
          paths:
            - .       
  deploytotest:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "bc:b2:8d:c5:3c:61:9e:44:93:37:a3:2b:cf:36:09:a2"
      - run:
          name: Deploy over SSH to test
          command: |
            scp docker-compose.yml ubuntu@104.155.55.149:.
            ssh ubuntu@104.155.55.149 "docker-compose down; docker-compose up -d;"
  testingthetestenvironment:
    machine: true
    steps:
      - run: 
          name: tesing the app
          command: |
            curl -o test.txt 104.155.55.149:5000   
      - store_test_results:
          path: test.txt
          detstination: test_results           
  deploytoproduction:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "bc:b2:8d:c5:3c:61:9e:44:93:37:a3:2b:cf:36:09:a2"
      - run:
          name: Deploy over SSH to production
          command: |
            scp docker-compose.yml ubuntu@35.241.177.63:.
            ssh ubuntu@35.241.177.63 "docker-compose down; docker-compose up -d"

workflows:
  version: 2
  test-package-deploy:
    jobs:
      - test
      - package:
          requires:
            - test
      - deploytotest:
          requires:
            - package
      - testingthetestenvironment:
          requires:
            - deploytotest      
      - deploytoproduction:
          requires:
            - testingthetestenvironment      